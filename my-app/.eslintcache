[{"D:\\react\\my-app\\src\\index.js":"1","D:\\react\\my-app\\src\\App.js":"2","D:\\react\\my-app\\src\\reportWebVitals.js":"3","D:\\react\\my-app\\src\\components\\auth\\SignUp.js":"4","D:\\react\\my-app\\src\\components\\auth\\SignIn.js":"5","D:\\react\\my-app\\src\\fbconfig.js":"6","D:\\react\\my-app\\src\\components\\Dashboard\\DragDrop.js":"7","D:\\react\\my-app\\src\\components\\Dashboard\\homepage.js":"8","D:\\react\\my-app\\src\\components\\layout\\Navbar.js":"9"},{"size":507,"mtime":1607357271530,"results":"10","hashOfConfig":"11"},{"size":687,"mtime":1610772789872,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":2818,"mtime":1610772920360,"results":"14","hashOfConfig":"11"},{"size":1956,"mtime":1610772820794,"results":"15","hashOfConfig":"11"},{"size":634,"mtime":1607359073160,"results":"16","hashOfConfig":"11"},{"size":9657,"mtime":1607590073703,"results":"17","hashOfConfig":"11"},{"size":1622,"mtime":1607589536776,"results":"18","hashOfConfig":"11"},{"size":2854,"mtime":1607590351090,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1no9t9x",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"D:\\react\\my-app\\src\\index.js",[],["42","43"],"D:\\react\\my-app\\src\\App.js",[],"D:\\react\\my-app\\src\\reportWebVitals.js",[],"D:\\react\\my-app\\src\\components\\auth\\SignUp.js",[],"D:\\react\\my-app\\src\\components\\auth\\SignIn.js",[],"D:\\react\\my-app\\src\\fbconfig.js",[],"D:\\react\\my-app\\src\\components\\Dashboard\\DragDrop.js",["44","45","46","47","48","49"],"import React, { useState, useEffect } from \"react\";\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport {v4 as uuid} from \"uuid\";\r\nimport {auth,db} from '../../fbconfig';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\r\nimport Navbar from '../layout/Navbar';\r\nimport M from 'materialize-css';\r\n\r\nconst itemsFromBackend = [\r\n  \r\n];\r\n\r\n    \r\n\r\nconst columnsFromBackend = {\r\n  [uuid()]: {\r\n    name: \"Requested\",\r\n    items: itemsFromBackend\r\n  },\r\n  [uuid()]: {\r\n    name: \"To do\",\r\n    items: []\r\n  },\r\n  [uuid()]: {\r\n    name: \"In Progress\",\r\n    items: []\r\n  },\r\n  [uuid()]: {\r\n    name: \"Done\",\r\n    items: []\r\n  }\r\n};\r\n\r\nconst onDragEnd = (result, columns, setColumns) => {\r\n  if (!result.destination) return;\r\n  const { source, destination } = result;\r\n\r\n  if (source.droppableId !== destination.droppableId) {\r\n    const sourceColumn = columns[source.droppableId];\r\n    const destColumn = columns[destination.droppableId];\r\n    const sourceItems = [...sourceColumn.items];\r\n    const destItems = [...destColumn.items];\r\n    const [removed] = sourceItems.splice(source.index, 1);\r\n    destItems.splice(destination.index, 0, removed);\r\n\r\n    var poschange = {\r\n      ...columns,\r\n      [source.droppableId]: {\r\n        ...sourceColumn,\r\n        items: sourceItems\r\n      },\r\n      [destination.droppableId]: {\r\n        ...destColumn,\r\n        items: destItems\r\n      }\r\n    }\r\n\r\n    setColumns({\r\n      ...columns,\r\n      [source.droppableId]: {\r\n        ...sourceColumn,\r\n        items: sourceItems\r\n      },\r\n      [destination.droppableId]: {\r\n        ...destColumn,\r\n        items: destItems\r\n      }\r\n    });\r\n\r\n    db.collection('workspace').doc('BEfYIIvfpiw7vhZEzVq9').set(poschange,{merge:true})\r\n\r\n\r\n  } else {\r\n    const column = columns[source.droppableId];\r\n    const copiedItems = [...column.items];\r\n    const [removed] = copiedItems.splice(source.index, 1);\r\n    copiedItems.splice(destination.index, 0, removed);\r\n\r\n    var changeMe = {\r\n      ...columns,\r\n      [source.droppableId]: {\r\n        ...column,\r\n        items: copiedItems\r\n      }\r\n    }\r\n\r\n\r\n    setColumns({\r\n      ...columns,\r\n      [source.droppableId]: {\r\n        ...column,\r\n        items: copiedItems\r\n      }\r\n    });\r\n    db.collection('workspace').doc('BEfYIIvfpiw7vhZEzVq9').set(changeMe,{merge:true})\r\n  }\r\n};\r\n\r\n\r\nfunction App(props) {\r\n   const  [columns, setColumns] = useState(columnsFromBackend)\r\n   const [name, setName] = useState('');\r\n   const [taskName, setTaskName] = useState('');\r\n   const [people, setPeople] = useState([]);\r\n\r\n  const addTask = (e) => {\r\n    console.log(e.target.value)\r\n    setTaskName(e.target.value)\r\n  }\r\n\r\n  const handleAdd = () => {\r\n    let id = uuid()\r\n    //let Name = auth.currentUser.displayName;\r\n    let obj = {\r\n      id,\r\n      Name: 'Jagrit',\r\n      content: taskName\r\n    }\r\n\r\n    let existing = columns\r\n    let newOnes = {\r\n      ...columns,\r\n      \"requested\": {\r\n        ...(columns['requested']),\r\n        items: [...(columns['requested'].items),obj]\r\n      }\r\n    }\r\n\r\n    setColumns(newOnes)\r\n    db.collection('workspace').doc('FY062lw5iQqUKfMCa4dE').set(newOnes, {merge: true})\r\n  }\r\n\r\n  const handleDelete = (id, columnId) => {\r\n    let existing = columns[columnId].items;\r\n    let newItems = existing.filter(item => item.id !== id)\r\n\r\n    let posDelete = {\r\n      ...columns,\r\n    }\r\n\r\n    posDelete[columnId] = {\r\n      ...(columns[columnId]),\r\n      items: newItems\r\n    }\r\n    setColumns(posDelete)\r\n\r\n    db.collection('workspace').doc('FY062lw5iQqUKfMCa4dE').set(posDelete, {merge: true})\r\n  }\r\n\r\n\r\n    useEffect(() => {\r\n      document.addEventListener('DOMContentLoaded', function () {\r\n        var elems = document.querySelectorAll('.sidenav');\r\n        var instances = M.Sidenav.init(elems);\r\n      });\r\n        db.collection('workspace').doc('BEfYIIvfpiw7vhZEzVq9').get().then((data)=>{\r\n            console.log(data.data())\r\n\r\n            setName(data.data().Name)\r\n            setPeople(data.data().People)\r\n\r\n            var obj = {\r\n                'requested':data.data().requested,\r\n                'Todo':data.data().Todo,\r\n                'Inprogress':data.data().Inprogress,\r\n                'done':data.data().done,\r\n            }\r\n            // console.log(obj)\r\n            setColumns(obj)\r\n        })\r\n    }, [])\r\n\r\n  \r\n  return (\r\n    <>\r\n     <Navbar props={props}/>\r\n      <div className=\"valign-wrapper\" style={{ position: \"relative\", height: \"80px\", width: \"100%\", backgroundColor: \"#6771E3\", borderRadius: \"0 0 0 70px\" }}>\r\n        <h5 style={{ margin: \"0\", paddingLeft: \"69px\", color: \"white\" }}>Ben's Workspace</h5>\r\n        <div className=\"white-text\" style={{ position: \"absolute\", right: \"40px\" }}>\r\n          <AvatarGroup max={4}>\r\n          {\r\n            people && people.map((person, key) => {\r\n              return(\r\n                <Avatar key={key} alt={person.Name}>{person.Name[0]}</Avatar>\r\n              )\r\n            })\r\n          }\r\n          </AvatarGroup>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ position: \"fixed\", bottom: \"20px\", right: \"20px\" }}>\r\n        <a className=\"btn-floating btn-large red modal-trigger\" href=\"#modal1\"><i className=\"material-icons\">add</i></a>\r\n      </div>\r\n    <div style={{ display: \"flex\", justifyContent: \"center\", height: \"100%\" }}>\r\n      <DragDropContext\r\n        onDragEnd={result => onDragEnd(result, columns, setColumns)}\r\n      >\r\n        {Object.entries(columns).map(([columnId, column], index) => {\r\n          return (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\"\r\n              }}\r\n              key={columnId}\r\n            >\r\n              <h4 className=\"white-text\">{column.name}</h4>\r\n              <div style={{ margin: 8 }}>\r\n                <Droppable droppableId={columnId} key={columnId}>\r\n                  {(provided, snapshot) => {\r\n                    return (\r\n                      <div\r\n                        {...provided.droppableProps}\r\n                        ref={provided.innerRef}\r\n                        style={{\r\n                          background: snapshot.isDraggingOver\r\n                            ? \"transparent\"\r\n                            : \"transparent\",\r\n                          padding: 4,\r\n                          width: 250,\r\n                          minHeight: 500\r\n                        }}\r\n                      >\r\n                        {column.items.map((item, index) => {\r\n                          return (\r\n                            <Draggable\r\n                              key={item.id}\r\n                              draggableId={item.id}\r\n                              index={index}\r\n                            >\r\n                              {(provided, snapshot) => {\r\n                                return (\r\n                                  <div className=\"row\"\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.draggableProps}\r\n                                    {...provided.dragHandleProps}\r\n                                    style={{\r\n                                      userSelect: \"none\",\r\n                                      padding: 16,\r\n                                      margin: \"0 0 8px 0\",\r\n                                      minHeight: \"50px\",\r\n                                      color: \"white\",\r\n                                      ...provided.draggableProps.style\r\n                                    }}\r\n                                  >       \r\n                              \r\n                                  <div className=\"col s12 \">\r\n                                    <div className=\"card \" style={{ borderRadius:\"20px\",backgroundColor:'#19202D',margin:0}}>\r\n                                      <div className=\"card-content white-text\">\r\n                                        <span className=\"card-title\">Card Title</span>\r\n                                        <p> {item.content}</p>\r\n                                      </div>\r\n                                      <div className=\"card-action \"style={{ borderRadius:\"20px\",padding:'1px 24px'}}>\r\n                                      <p className=\"red-text\"> {item.Name} </p>\r\n                                      </div>\r\n                                    </div>\r\n                                 \r\n                                </div>\r\n                                 \r\n                                  </div>\r\n                                );\r\n                              }}\r\n                            </Draggable>\r\n                          );\r\n                        })}\r\n                        {provided.placeholder}\r\n                      </div>\r\n                    );\r\n                  }}\r\n                </Droppable>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </DragDropContext>\r\n      <div id=\"modal1\" className=\"modal modal-fixed-footer\" style={{ marginTop: '200px' }}>\r\n          <div className=\"modal-content\">\r\n            <h4>Add Task</h4>\r\n            <label for=\"textarea1\">Enter task name</label>\r\n            <textarea id=\"textarea1\" className=\"materialize-textarea\" data-length=\"120\" onChange={(e) => addTask(e)}></textarea>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <a className=\"modal-close waves-effect waves-green btn-flat\" onClick={() => handleAdd()}>Add Task</a>\r\n          </div>\r\n        </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\react\\my-app\\src\\components\\Dashboard\\homepage.js",["50","51","52","53","54","55","56","57"],"\r\nimport React,{useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { auth } from '../../../src/fbconfig';\r\nimport M from 'materialize-css'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\r\nimport navbar from '../layout/Navbar'\r\n\r\nfunction SignUp() {\r\n    return (\r\n        <div>\r\n            <navbar/>\r\n            <div className=\"valign-wrapper\" style={{ position:\"relative\", height: \"80px\", width: \"100%\", backgroundColor: \"#6771E3\", borderRadius: \"0 0 0 70px\"}}>\r\n                <h5 style={{ margin: \"0\", paddingLeft: \"69px\", color:\"white\"}}>ReactBase</h5>\r\n                <a className=\"white-text\" style={{ position: \"absolute\", right: \"40px\", cursor: \"pointer\"}}>Log Out</a>\r\n            </div>\r\n\r\n            <div className=\"container\" style={{ width: \"90%\" }}>\r\n                <div class=\"row\">\r\n                    <div class=\"col s12 m6 l4\">\r\n                        <div class=\"card white\" style={{borderRadius: \"24px\"}}>\r\n                            <div class=\"card-content white-text valign-wrapper\" style={{height: \"200px\"}}>\r\n                                <p className=\"black-text\" style={{margin: \"0 auto\"}}>Create a new project</p>\r\n                            </div>\r\n                            <div class=\"card-action\" style={{borderRadius: \"24px\"}}>\r\n                                <a href=\"#\">Click here to create</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n      </div>\r\n\r\n\r\n    \r\n    )\r\n}\r\n \r\nexport default SignUp","D:\\react\\my-app\\src\\components\\layout\\Navbar.js",["58","59"],"import React, {useEffect, useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { db } from '../../../src/fbconfig';\r\nimport firebase from 'firebase'\r\nimport { auth } from '../../../src/fbconfig';\r\n\r\nfunction Navbar({props}) {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const arrayUnion = firebase.firestore.FieldValue.arrayUnion;\r\n\r\n    useEffect(() => {\r\n        window.$(document).ready(function () {\r\n          window.$('.modal').modal();\r\n          window.$('#textarea1').val('');\r\n          window.$('input#input_text, textarea#textarea2').characterCounter();\r\n        });\r\n      }, [])\r\n\r\n    \r\n    const getEmail = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const addPerson = (e) => {\r\n        db.collection('users').get().then((data) => {\r\n            data.forEach(d => {\r\n                if(d.data().Email === email) {\r\n                    db.collection('workspace').doc('FY062lw5iQqUKfMCa4dE').update({'People': arrayUnion({'Name': d.data().Name, 'UID': d.data().UID})})\r\n                    console.log(\"Person added\")\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: \"100%\" }}>\r\n            <nav style={{ backgroundColor: \"#5964E0\" }}>\r\n                <div className=\"nav-wrapper\">\r\n                    <a href=\"#!\" className=\"brand-logo\" style={{ paddingLeft: \"69px\" }}>ReactBase</a>\r\n                    <a href=\"#\" data-target=\"mobile-demo\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\r\n                    <ul className=\"right hide-on-med-and-down\">\r\n                        <li><Link to=\"/workspace\">Homepage</Link></li>\r\n                        <li><a className=\"modal-trigger\" href=\"#modal3\">Add People</a></li>\r\n                        <li><Link onClick={() => {auth.signOut(); props.history.push('/')}}>Logout</Link></li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n\r\n            <ul className=\"sidenav\" id=\"mobile-demo\">\r\n                <li><Link to=\"/workspace\">Homepage</Link></li>\r\n                <li><Link>Add People</Link></li>\r\n                <li><Link>Logout</Link></li>\r\n            </ul>\r\n            <div id=\"modal3\" className=\"modal modal-fixed-footer\" style={{ marginTop: '200px' }}>\r\n                <div className=\"modal-content\">\r\n                    <h4>Add People</h4>\r\n                    <label for=\"textarea1\">Enter email</label>\r\n                    <textarea id=\"textarea1\" className=\"materialize-textarea\" onChange={(e) => getEmail(e)} data-length=\"120\"></textarea>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <a onClick={() => addPerson()} className=\"modal-close waves-effect waves-green btn-flat\">Add People</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":4,"column":9,"nodeType":"66","messageId":"67","endLine":4,"endColumn":13},{"ruleId":"64","severity":1,"message":"68","line":103,"column":11,"nodeType":"66","messageId":"67","endLine":103,"endColumn":15},{"ruleId":"64","severity":1,"message":"69","line":121,"column":9,"nodeType":"66","messageId":"67","endLine":121,"endColumn":17},{"ruleId":"64","severity":1,"message":"70","line":134,"column":9,"nodeType":"66","messageId":"67","endLine":134,"endColumn":21},{"ruleId":"64","severity":1,"message":"71","line":155,"column":13,"nodeType":"66","messageId":"67","endLine":155,"endColumn":22},{"ruleId":"72","severity":1,"message":"73","line":286,"column":13,"nodeType":"74","endLine":286,"endColumn":102},{"ruleId":"64","severity":1,"message":"75","line":2,"column":15,"nodeType":"66","messageId":"67","endLine":2,"endColumn":23},{"ruleId":"64","severity":1,"message":"76","line":3,"column":9,"nodeType":"66","messageId":"67","endLine":3,"endColumn":13},{"ruleId":"64","severity":1,"message":"65","line":4,"column":10,"nodeType":"66","messageId":"67","endLine":4,"endColumn":14},{"ruleId":"64","severity":1,"message":"77","line":5,"column":8,"nodeType":"66","messageId":"67","endLine":5,"endColumn":9},{"ruleId":"64","severity":1,"message":"78","line":6,"column":8,"nodeType":"66","messageId":"67","endLine":6,"endColumn":14},{"ruleId":"64","severity":1,"message":"79","line":7,"column":8,"nodeType":"66","messageId":"67","endLine":7,"endColumn":19},{"ruleId":"72","severity":1,"message":"73","line":16,"column":17,"nodeType":"74","endLine":16,"endColumn":109},{"ruleId":"72","severity":1,"message":"80","line":27,"column":33,"nodeType":"74","endLine":27,"endColumn":45},{"ruleId":"72","severity":1,"message":"80","line":41,"column":21,"nodeType":"74","endLine":41,"endColumn":87},{"ruleId":"72","severity":1,"message":"73","line":62,"column":21,"nodeType":"74","endLine":62,"endColumn":110},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'auth' is defined but never used.","Identifier","unusedVar","'name' is assigned a value but never used.","'existing' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","'instances' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'Link' is defined but never used.","'M' is defined but never used.","'Avatar' is defined but never used.","'AvatarGroup' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]