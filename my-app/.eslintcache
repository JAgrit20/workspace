[{"D:\\react\\my-app\\src\\index.js":"1","D:\\react\\my-app\\src\\App.js":"2","D:\\react\\my-app\\src\\reportWebVitals.js":"3","D:\\react\\my-app\\src\\components\\auth\\SignUp.js":"4","D:\\react\\my-app\\src\\components\\auth\\SignIn.js":"5","D:\\react\\my-app\\src\\fbconfig.js":"6","D:\\react\\my-app\\src\\components\\Dashboard\\DragDrop.js":"7"},{"size":507,"mtime":1607357271530,"results":"8","hashOfConfig":"9"},{"size":574,"mtime":1607430724480,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":2314,"mtime":1607427218686,"results":"12","hashOfConfig":"9"},{"size":1932,"mtime":1607426955309,"results":"13","hashOfConfig":"9"},{"size":634,"mtime":1607359073160,"results":"14","hashOfConfig":"9"},{"size":6655,"mtime":1607492146994,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1no9t9x",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"D:\\react\\my-app\\src\\index.js",[],["33","34"],"D:\\react\\my-app\\src\\App.js",[],"D:\\react\\my-app\\src\\reportWebVitals.js",[],"D:\\react\\my-app\\src\\components\\auth\\SignUp.js",[],"D:\\react\\my-app\\src\\components\\auth\\SignIn.js",["35"],"\r\nimport React,{useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { auth } from '../../../src/fbconfig';\r\nimport M from 'materialize-css'\r\n\r\n \r\nfunction SignUp() {\r\n  const [pass,setPass] = useState('')\r\n  const [email,setEmail] = useState('')\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    auth.signInWithEmailAndPassword(email,pass).then(()=>{\r\n      console.log(\"sign in Successful\")\r\n    }).catch(err =>{\r\n      M.toast({html:err.message})\r\n    })\r\n  }\r\n    return (\r\n        <div className=\"row valign-wrapper\" style={{height:\"100vh\"}}>\r\n            <div className=\"container\" >\r\n    <form className=\"col s12 white \" style={{borderRadius:\"24px\", padding:\"20px\"}} >\r\n        <h3 className=\"center-align\">Sign In</h3>\r\n      <div className=\"row \" >\r\n        <div className=\"input-field col s12 \">\r\n          <i className=\"material-icons prefix blue-text text-darken-2\">account_circle</i>\r\n          <input id=\"email\" type=\"text\" onChange={(e)=> setEmail(e.target.value)} className=\"validate \" />\r\n          <label htmlFor=\"email\">Email</label>\r\n        </div>\r\n        <div className=\"input-field col s12\">\r\n          <i className=\"material-icons prefix blue-text text-darken-2\">lock</i>\r\n          <input id=\"password\" type=\"password\" onChange={(e)=>setPass(e.target.value)} className=\"validate\" />\r\n          <label htmlFor=\"password\">password</label>\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"row valign-wrapper\">\r\n      <button class=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Submit\r\n    <i class=\"material-icons center-align\">send</i>\r\n  </button>\r\n  </div> */}\r\n  <input id=\"submit\" type=\"submit\" className=\"btn center-align col s3 offset-s3\" style={{borderRadius:\"14px\"}} />\r\n  <Link to=\"/\" style={{paddingLeft:\"12px\",fontSize:\"22px\"}}>Don't have an account</Link>\r\n\r\n    </form>\r\n    </div>\r\n  </div>\r\n        \r\n    \r\n    )\r\n}\r\n \r\nexport default SignUp","D:\\react\\my-app\\src\\fbconfig.js",[],"D:\\react\\my-app\\src\\components\\Dashboard\\DragDrop.js",["36","37","38","39","40"],"import React, { useState, useEffect } from \"react\";\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport {v4 as uuid} from \"uuid\";\r\nimport {auth,db} from '../../fbconfig'\r\n\r\nconst itemsFromBackend = [\r\n  \r\n];\r\n\r\n    \r\n\r\nconst columnsFromBackend = {\r\n  [uuid()]: {\r\n    name: \"Requested\",\r\n    items: itemsFromBackend\r\n  },\r\n  [uuid()]: {\r\n    name: \"To do\",\r\n    items: []\r\n  },\r\n  [uuid()]: {\r\n    name: \"In Progress\",\r\n    items: []\r\n  },\r\n  [uuid()]: {\r\n    name: \"Done\",\r\n    items: []\r\n  }\r\n};\r\n\r\nconst onDragEnd = (result, columns, setColumns) => {\r\n  if (!result.destination) return;\r\n  const { source, destination } = result;\r\n\r\n  if (source.droppableId !== destination.droppableId) {\r\n    const sourceColumn = columns[source.droppableId];\r\n    const destColumn = columns[destination.droppableId];\r\n    const sourceItems = [...sourceColumn.items];\r\n    const destItems = [...destColumn.items];\r\n    const [removed] = sourceItems.splice(source.index, 1);\r\n    destItems.splice(destination.index, 0, removed);\r\n\r\n    var poschange = {\r\n      ...columns,\r\n      [source.droppableId]: {\r\n        ...sourceColumn,\r\n        items: sourceItems\r\n      },\r\n      [destination.droppableId]: {\r\n        ...destColumn,\r\n        items: destItems\r\n      }\r\n    }\r\n\r\n    setColumns({\r\n      ...columns,\r\n      [source.droppableId]: {\r\n        ...sourceColumn,\r\n        items: sourceItems\r\n      },\r\n      [destination.droppableId]: {\r\n        ...destColumn,\r\n        items: destItems\r\n      }\r\n    });\r\n\r\n    db.collection('workspace').doc('BEfYIIvfpiw7vhZEzVq9').set(poschange,{merge:true})\r\n\r\n\r\n  } else {\r\n    const column = columns[source.droppableId];\r\n    const copiedItems = [...column.items];\r\n    const [removed] = copiedItems.splice(source.index, 1);\r\n    copiedItems.splice(destination.index, 0, removed);\r\n\r\n    var changeMe = {\r\n      ...columns,\r\n      [source.droppableId]: {\r\n        ...column,\r\n        items: copiedItems\r\n      }\r\n    }\r\n\r\n\r\n    setColumns({\r\n      ...columns,\r\n      [source.droppableId]: {\r\n        ...column,\r\n        items: copiedItems\r\n      }\r\n    });\r\n    db.collection('workspace').doc('BEfYIIvfpiw7vhZEzVq9').set(changeMe,{merge:true})\r\n  }\r\n};\r\n\r\nfunction App() {\r\n   const  [columns, setColumns] = useState(columnsFromBackend)\r\n  const [email, setEmail] = useState('')\r\n  const [pass, setPass] = useState('')\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        db.collection('workspace').doc('BEfYIIvfpiw7vhZEzVq9').get().then((data)=>{\r\n            console.log(data.data())\r\n            var obj = {\r\n                'requested':data.data().requested,\r\n                'Todo':data.data().Todo,\r\n                'Inprogress':data.data().Inprogress,\r\n                'done':data.data().done,\r\n            }\r\n            // console.log(obj)\r\n            setColumns(obj)\r\n        })\r\n    }, [])\r\n\r\n  \r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\", height: \"100%\" }}>\r\n      <DragDropContext\r\n        onDragEnd={result => onDragEnd(result, columns, setColumns)}\r\n      >\r\n        {Object.entries(columns).map(([columnId, column], index) => {\r\n          return (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\"\r\n              }}\r\n              key={columnId}\r\n            >\r\n              <h4 className=\"white-text\">{column.name}</h4>\r\n              <div style={{ margin: 8 }}>\r\n                <Droppable droppableId={columnId} key={columnId}>\r\n                  {(provided, snapshot) => {\r\n                    return (\r\n                      <div\r\n                        {...provided.droppableProps}\r\n                        ref={provided.innerRef}\r\n                        style={{\r\n                          background: snapshot.isDraggingOver\r\n                            ? \"transparent\"\r\n                            : \"transparent\",\r\n                          padding: 4,\r\n                          width: 250,\r\n                          minHeight: 500\r\n                        }}\r\n                      >\r\n                        {column.items.map((item, index) => {\r\n                          return (\r\n                            <Draggable\r\n                              key={item.id}\r\n                              draggableId={item.id}\r\n                              index={index}\r\n                            >\r\n                              {(provided, snapshot) => {\r\n                                return (\r\n                                  <div className=\"row\"\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.draggableProps}\r\n                                    {...provided.dragHandleProps}\r\n                                    style={{\r\n                                      userSelect: \"none\",\r\n                                      padding: 16,\r\n                                      margin: \"0 0 8px 0\",\r\n                                      minHeight: \"50px\",\r\n                                      color: \"white\",\r\n                                      ...provided.draggableProps.style\r\n                                    }}\r\n                                  >       \r\n                              \r\n                                  <div className=\"col s12 \">\r\n                                    <div className=\"card \" style={{ borderRadius:\"20px\",backgroundColor:'#19202D',margin:0}}>\r\n                                      <div className=\"card-content white-text\">\r\n                                        <span className=\"card-title\">Card Title</span>\r\n                                        <p> {item.content}</p>\r\n                                      </div>\r\n                                      <div className=\"card-action \"style={{ borderRadius:\"20px\",padding:'1px 24px'}}>\r\n                                      <p className=\"red-text\"> {item.Name} </p>\r\n                                      </div>\r\n                                    </div>\r\n                                 \r\n                                </div>\r\n                                 \r\n                                  </div>\r\n                                );\r\n                              }}\r\n                            </Draggable>\r\n                          );\r\n                        })}\r\n                        {provided.placeholder}\r\n                      </div>\r\n                    );\r\n                  }}\r\n                </Droppable>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":12,"column":9,"nodeType":"47","messageId":"48","endLine":12,"endColumn":21},{"ruleId":"45","severity":1,"message":"49","line":4,"column":9,"nodeType":"47","messageId":"48","endLine":4,"endColumn":13},{"ruleId":"45","severity":1,"message":"50","line":98,"column":10,"nodeType":"47","messageId":"48","endLine":98,"endColumn":15},{"ruleId":"45","severity":1,"message":"51","line":98,"column":17,"nodeType":"47","messageId":"48","endLine":98,"endColumn":25},{"ruleId":"45","severity":1,"message":"52","line":99,"column":10,"nodeType":"47","messageId":"48","endLine":99,"endColumn":14},{"ruleId":"45","severity":1,"message":"53","line":99,"column":16,"nodeType":"47","messageId":"48","endLine":99,"endColumn":23},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'handleSubmit' is assigned a value but never used.","Identifier","unusedVar","'auth' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'pass' is assigned a value but never used.","'setPass' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]